(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{231:function(n,t,e){"use strict";e.r(t);var a=e(0),r=Object(a.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h2",{attrs:{id:"一、javascript基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、javascript基础","aria-hidden":"true"}},[n._v("#")]),n._v(" 一、JavaScript基础")]),n._v(" "),e("blockquote",[e("p",[n._v("前端工程师吃饭的家伙，深度、广度一样都不能差。")])]),n._v(" "),e("h3",{attrs:{id:"手写call函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#手写call函数","aria-hidden":"true"}},[n._v("#")]),n._v(" 手写call函数")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("    Function.prototype._call = function(context) {\n      if (typeof this !== 'function') {\n        throw new Error('call must be a function')\n      }\n\n      let args = [...arguments].slice(1);\n\n      const fn = Symbol('fn');\n      context = context || window;\n      context[fn] = this;\n      let result = context[fn](...args);\n      delete context[fn];\n      return result;\n    }\n")])])]),e("h3",{attrs:{id:"手写apply函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#手写apply函数","aria-hidden":"true"}},[n._v("#")]),n._v(" 手写apply函数")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("    Function.prototype._apply = function(context, args) {\n      if (typeof this !== 'function') {\n        throw new Error('call must be a function')\n      }\n\n      const fn = Symbol('fn');\n      context = context || window;\n      context[fn] = this;\n      let result = context[fn](...args);\n      delete context[fn];\n      return result;\n    }\n")])])]),e("h3",{attrs:{id:"手写bind函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#手写bind函数","aria-hidden":"true"}},[n._v("#")]),n._v(" 手写bind函数")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("  \tFunction.prototype._bind = function(context) {\n      if (typeof this !== 'function') {\n        throw new Error('bind must be on a function')\n      }\n      let _this = this;\n      let args = Array.prototype.slice.call(arguments, 1);\n      let nop = function() {};\n\n      let fn = function() {\n        return _this.apply(this instanceof _this \n        \t? this \n        \t: context, args.concat(Array.prototype.slice.call(arguments)))\n      }\n\n      if (this.prototype) {\n        nop.prototype = this.prototype;\n      }\n      fn.prototype = new nop();\n      return fn;\n    }\n")])])]),e("h3",{attrs:{id:"手写new函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#手写new函数","aria-hidden":"true"}},[n._v("#")]),n._v(" 手写new函数")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("  \tfunction _new(con, ...args) {\n      let obj = Object.create(con.prototype);\n      let result = con.apply(obj, args)\n      return result instanceof Object ? result : obj;\n    }\n")])])]),e("h3",{attrs:{id:"手写create函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#手写create函数","aria-hidden":"true"}},[n._v("#")]),n._v(" 手写create函数")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("  \tObject.prototype._create = function(obj) {\n      function f() {};\n      f.prototype = obj;\n      return new f();\n\n    }\n\n    function _instanceof(l, r) {\n    \tvar o = r.prototype;\n    \tl = l.__proto__;\n\n    \twhile(true) {\n    \t\tif (l === null ) return false;\n    \t\tif (l === o) return true;\n    \t\tl = l.__proto__;\n    \t}\n    }\n")])])]),e("h3",{attrs:{id:"手写instanceof函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#手写instanceof函数","aria-hidden":"true"}},[n._v("#")]),n._v(" 手写instanceof函数")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("    function _instanceof(l, r) {\n    \tvar o = r.prototype;\n    \tl = l.__proto__;\n\n    \twhile(true) {\n    \t\tif (l === null ) return false;\n    \t\tif (l === o) return true;\n    \t\tl = l.__proto__;\n    \t}\n    }\n\n")])])]),e("h3",{attrs:{id:"手写isarray函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#手写isarray函数","aria-hidden":"true"}},[n._v("#")]),n._v(" 手写isArray函数")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("\tfunction _isArray(o) {\n    \treturn Object.prototype.toStirng.call(o) === '[object Array]';\n    }\n")])])]),e("h3",{attrs:{id:"findindex实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findindex实现","aria-hidden":"true"}},[n._v("#")]),n._v(" findIndex实现")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("Array.prototype.findIndex = function(fn) {\n  for(let i = 0; i < this.length; i++) {\n    if(fn(this[i], i, this)) {\n      return i;\n    }\n  }\n}\n")])])]),e("h3",{attrs:{id:"async函数错误统一捕获"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#async函数错误统一捕获","aria-hidden":"true"}},[n._v("#")]),n._v(" async函数错误统一捕获")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("/**\n * async函数错误统一捕获\n * @param {func}  async函数\n * @return {Array} \n */\nasync function errorCaptured(asyncFunc) {\n  try {\n    let res = await asyncFunc()\n    return [null, res]\n  } catch (err) {\n    return [err, null]\n  }\n}\n")])])]),e("h3",{attrs:{id:"compose函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#compose函数","aria-hidden":"true"}},[n._v("#")]),n._v(" compose函数")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("/**\n * compose函数 函数执行从右到左\n * @param {any} \n * @return {any} \n */\n function compose(...fns) {\n   return function(x) {\n     return fns.reduceRight(function(arg, fn) {\n       return fn(arg)\n     }, x)\n   }\n }\n")])])]),e("h3",{attrs:{id:"pipeline管道函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pipeline管道函数","aria-hidden":"true"}},[n._v("#")]),n._v(" pipeline管道函数")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v(" /**\n * pipeline管道函数 函数执行从左到右\n * @param {any} \n * @return {any} \n */\n function compose(...fns) {\n   return function(x) {\n     return fns.reduce(function(arg, fn) {\n       return fn(arg)\n     }, x)\n   }\n }\n")])])]),e("h3",{attrs:{id:"节流函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#节流函数","aria-hidden":"true"}},[n._v("#")]),n._v(" 节流函数")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("\tfunction throttle(fn, wait) {\n    \tlet canRun = true;\n\n    \treturn function() {\n            let context = this;\n            let args = arguments;\n\n    \t\tif (!canRun) return;\n            canRun = false;\n\n            setTimeout(function() {\n                fn.apply(context, args)\n                canRun = true;\n            }, wait)\n    \t}\n\n    }\n")])])]),e("h3",{attrs:{id:"防抖函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#防抖函数","aria-hidden":"true"}},[n._v("#")]),n._v(" 防抖函数")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("\tfunction debounce(fn, wait, immediate) {\n    \tlet timeout;\n        \n        return function() {\n            let context = this;\n            let args = arguments;\n\n            timeout && clearTimeout(timeout);\n\n            if (immediate) {\n                let callNow = !timeout;\n                timeout = setTimeout(function() {\n                    fn.apply(context, args)\n                }, wait) \n\n                if (callNow) fn.apply(context, args)\n            } else {\n                timeout = setTimeout(function() {\n                    fn.apply(context, args)\n                }, wait) \n            }\n        }\n    }\n      \n")])])]),e("h3",{attrs:{id:"数组扁平化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数组扁平化","aria-hidden":"true"}},[n._v("#")]),n._v(" 数组扁平化")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("\tfunction _flat(arr) {\n    \tif (!Array.isArray(arr)) {\n    \t\tthrow new Error('it is not array')\n    \t}\n    \treturn arr.reduce((pre, cur) => {\n    \t\treturn pre.concat(Array.isArray(cur) ? _flat(cur) : cur);\n    \t}, [])\n    }\n    function _flat(arr) {\n        if (!Array.isArray(arr)) {\n        throw new Error('it is not array')\n        }\n        while (arr.some(item => Array.isArray(item))) {\n           arr = [].concat(...arr)\n        }\n        return arr\n    }\n    function _flat(arr) {\n        if (!Array.isArray(arr)) {\n        throw new Error('it is not array')\n        }\n        return arr.join(',').split(',').map(item => Number(item))\n    }\n      \n")])])]),e("h3",{attrs:{id:"数组去重"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数组去重","aria-hidden":"true"}},[n._v("#")]),n._v(" 数组去重")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("\tfunction _unique(arr) {\n        return [...new Set(arr)]\n    }\n    function _unique(arr) {\n        let obj = {}\n        return arr.filter((item, index) => {\n            return obj.hasOwnProperty(typeof item + item) \n                ? false \n                : (obj[typeof item + item] = true)\n        })\n    }\n    function _unique(arr) {\n        return arr.filter((item, index) => {\n            return arr.indexOf(item) === index;\n        })\n    }\n    function _unique(arr) {\n        let array = [];\n        for (let i = 0; i < arr.length; i++) {\n            if (!Array.inclueds(arr[i])) {\n                array.push(arr[i])\n            }\n        }\n        return array\n    }\n      \n")])])]),e("h3",{attrs:{id:"promise-实现原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#promise-实现原理","aria-hidden":"true"}},[n._v("#")]),n._v(" Promise 实现原理")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("  function _Promise(constructor) {\n    let _this = this;\n    _this.status = 'pending';\n    _this.value = ''\n    _this.reason = ''\n\n    function resolve(value) {\n      if (_this.status === 'pending') {\n        _this.value = value\n        _this.status = 'fulfilled'\n      }\n    }\n\n    function reject(reason) {\n      if (_this.status === 'pending') {\n        _this.reason = reason;\n        _this.status = 'rejected'\n      }\n    }\n\n    try {\n      constructor(resolve, reject)\n    } catch(err) {\n      reject(err)\n    }\n  }\n\n  _Promise.prototype.then = function(onFulfilled, onRejected) {\n    let _this = this;\n\n    if (_this.status === 'fulfilled') {\n      onFulfilled(_this.value);\n    } else if (_this.status === 'rejected') {\n      onRejected(_this.reason)\n    }\n\n  }\n      \n")])])]),e("h3",{attrs:{id:"async-函数的实现原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#async-函数的实现原理","aria-hidden":"true"}},[n._v("#")]),n._v(" async 函数的实现原理")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("\tfunction spawn(genFunc) {\n\t  return new Promise(function(resolve, reject) {\n\t    const gen = genFunc();\n\n\t    function step(nextFunc) {\n\t      let next;\n\t      try {\n\t        next = nextFunc()\n\t      } catch(e) {\n\t        return reject(e)\n\t      }\n\n\t      if(next.done) {\n\t        return resolve(next.value);\n\t      }\n\n\t      Promise.resolve(next.value).then(\n\t        function(v) {\n\t          step(function() {\n\t            return gen.next(v)\n\t          })\n\t        },\n\n\t        function(e) {\n\t          setp(function() {\n\t            return gen.throw(e)\n\t          })\n\t        }\n\t      )\n\t    }\n\n\t    step(function() {\n\t      return gen.next(undefined)\n\t    })\n\t  })\n\t}\n")])])]),e("h3",{attrs:{id:"vue响应式原理简单实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue响应式原理简单实现","aria-hidden":"true"}},[n._v("#")]),n._v(" vue响应式原理简单实现")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("\t/**\n   * vue响应式原理\n   * 基于Object.defineProperty\n   */\n\n  let data = {price: 5, quantity: 2}\n  let target = null\n  class Dep {\n    constructor() {\n      this.subscribers = [];\n    }\n    depend() {\n      if(target && !this.subscribers.includes(target)) {\n        this.subscribers.push(target);\n        console.log('depend', this.subscribers)\n      }\n    }\n    notify() {\n      this.subscribers.forEach(sub => sub())\n      console.log('notify', this.subscribers)\n    }\n  }\n \n\n  Object.keys(data).forEach(key => {\n    let internalVale = data[key]\n\n    const dep = new Dep()\n    console.log('dep', dep)\n\n    Object.defineProperty(data, key, {\n      get() {\n        console.log(`get value ${internalVale}`)\n        dep.depend()\n        return internalVale\n      },\n      set(newVal) {\n        console.log(`set value ${newVal}`)\n        internalVale = newVal;\n        dep.notify()\n      }\n    })\n  })\n\n  function watcher(fn) {\n    target = fn;\n    target();\n    target = null\n    console.log('watcher')\n  }\n\n  watcher( _ => {\n    data.total = data.price * data.quantity\n    console.log(data.total)\n  })\n\n\n  /**\n   * vue响应式原理\n   * 基于Proxy\n   */\n\n  let data = { price:5, quantity: 2 };\n  let target = null;\n\n  class Dep {\n    constructor () {\n      this.subscribers = [];\n    }\n    depend () {\n      if (target && !this.subscribers.includes(target)) {\n        this.subscribers.push(target);\n        console.log('depend', this.subscribers)\n      }\n    }\n    notify() {\n      this.subscribers.forEach(sub => sub())\n      console.log('notify', this.subscribers)\n    }\n  }\n\n  let deps = new Map();\n  Object.keys(data).forEach(key => {\n    deps.set(key, new Dep());\n  })\n  console.log(deps)\n\n  let data_without_proxy = data;\n  data = new Proxy(data_without_proxy, {\n    get(obj, key) {\n      deps.get(key).depend();\n      return obj[key];\n    },\n    set(obj, key, newVal) {\n      obj[key] = newVal;\n      deps.get(key).notify()\n      return true;\n    }\n  })\n\n  function watcher(func) {\n    target = func;\n    target();\n    target = null;\n  }\n  let total = 0;\n  watcher(() => {\n    total = data.price * data.quantity;\n  })\n      \n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);